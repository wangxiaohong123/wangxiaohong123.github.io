<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>自研框架 on 王小红的笔记</title>
    <link>http://localhost:1313/categories/%E8%87%AA%E7%A0%94%E6%A1%86%E6%9E%B6/</link>
    <description>Recent content in 自研框架 on 王小红的笔记</description>
    <generator>Hugo -- 0.150.0</generator>
    <language>zh-CN</language>
    <atom:link href="http://localhost:1313/categories/%E8%87%AA%E7%A0%94%E6%A1%86%E6%9E%B6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>自研框架-自研im</title>
      <link>http://localhost:1313/posts/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E8%87%AA%E7%A0%94%E6%A1%86%E6%9E%B6/2.%E8%87%AA%E7%A0%94im/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/%E8%87%AA%E7%A0%94%E6%A1%86%E6%9E%B6/2.%E8%87%AA%E7%A0%94im/</guid>
      <description>&lt;p&gt;整体架构：
&lt;img alt=&#34;IM系统架构&#34; loading=&#34;lazy&#34; src=&#34;https://raw.githubusercontent.com/wangxiaohong123/p-bed/main/uPic/IM%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分发层启动之后会在zk上注册节点信息；&lt;/li&gt;
&lt;li&gt;接入层启动之后也会在zk上注册节点信息，然后监听zk上的分发层机器信息，当感知到分发层有机器上线的时候就发起链接并保存分发层信息，然后发送一个注册消息，分发层收到注册消息之后保存接入层信息；&lt;/li&gt;
&lt;li&gt;接入层每5s向分发层发送一次心跳，接入层和分发层都是通过IdelStateHandler配置的客户端如果30s没有读写请求就断开连接；&lt;/li&gt;
&lt;li&gt;接入层在zk上的节点信息有当前连接的客户端数量(接入层每隔3s更新)，当客户端请求ipList服务的时候会挑一个连接数少的接入层服务器返回给客户端；&lt;/li&gt;
&lt;li&gt;客户端和接入层建立连接之后会把连接信息发送给路由服务，路由服务校验token，再把用户信息和接入服务的机器信息存到redis中，然后返回响应给接入层，接入层收到消息后会维护用户和连接信息；&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;1技术栈&#34;&gt;1.技术栈&lt;/h5&gt;
&lt;p&gt;整体架构使用cloud alibaba，缓存使用redis，关系数据库使用MySQL，消息持久化使用MongoDB或者hbase，消息中间件使用RocketMQ或者kafka，接入层和分发层的定向交互使用zk，序列化协议使用protobuf。加密使用netty的SSL。&lt;/p&gt;
&lt;p&gt;如果要支持多端的话还需要加很多东西。&lt;/p&gt;
&lt;h5 id=&#34;2为什么要单独引入zk&#34;&gt;2.为什么要单独引入zk&lt;/h5&gt;
&lt;p&gt;分发层和接入层都是多服务器部署，如果分发层有服务器宕机，接入层可以自动重试，但是分发层发送推送消息请求时，如果接入层有机器宕机，需要马上感知下线的服务实例，把推送请求暂存，等到客户端重连后再进行推送，同时也需要根据session信息来选择要调用那台接入层机器，使用zk是合理的，虽然nacos也可以做到，但是麻烦一些。&lt;/p&gt;
&lt;h5 id=&#34;3tcp接入层和websocket接入层要分开&#34;&gt;3.tcp接入层和websocket接入层要分开&lt;/h5&gt;
&lt;p&gt;因为tcp接入层面向的是c端用户，用户量比较大，要部署大量机器。websocket面向的一般是网页比如客服之类的，可能1台机器就足够了。而且两个协议的很多代码不一样，不能合并到一起处理。&lt;/p&gt;
&lt;h5 id=&#34;4自定义协议&#34;&gt;4.自定义协议&lt;/h5&gt;
&lt;p&gt;协议头共20个字节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;headLength：4byte，消息头长度，固定20&lt;/li&gt;
&lt;li&gt;clientVersion：4byte，客户端SDK版本号&lt;/li&gt;
&lt;li&gt;requestType：4byte，请求类型&lt;/li&gt;
&lt;li&gt;sequence：4byte，请求序号&lt;/li&gt;
&lt;li&gt;bodyLength：4byte，请求体长度&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;请求体的序列化和反序列化协议使用protobuf。&lt;/p&gt;
&lt;h6 id=&#34;41-protobuf-demo&#34;&gt;4.1 protobuf demo&lt;/h6&gt;
&lt;p&gt;首先到github(&lt;code&gt;https://github.com/protocolbuffers/protobuf/releases/tag/v3.9.0&lt;/code&gt;)下载对应系统的安装包然后解压。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 进入解压后的文件夹执行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 设置编译目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;./configure --prefix&lt;span style=&#34;color:#ff79c6&#34;&gt;=[&lt;/span&gt;编译目录&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 编译并安装&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make install
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 配置环境变量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open ~/.bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 添加配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;PROTOBUF&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=[&lt;/span&gt;编译目录&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;PATH&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;$PROTOBUF&lt;/span&gt;/bin:&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;$PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 刷新配置文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;source&lt;/span&gt; .bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;将proto文件编译成java文件：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
